[Unit]
Description=Kubernetes API Server
Documentation=https://github.com/kubernetes/kubernetes

[Service]
ExecStart=/usr/local/bin/kube-apiserver \
  --allow-privileged=true \
  --apiserver-count=3 \
  --audit-log-maxage=30 \
  --audit-log-maxbackup=3 \
  --audit-log-maxsize=100 \
  --audit-log-path=/var/log/audit.log \
  --authorization-mode=Node,RBAC \
  --cert-dir="{{pki_dir}}" \
  --client-ca-file={{pki_dir}}/ca.pem \
  --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota \
  --enable-aggregator-routing \
  --encryption-provider-config={{pki_dir}}/encryption-config.yaml \
  --etcd-cafile={{pki_dir}}/ca.pem \
  --etcd-certfile={{pki_dir}}/kubernetes.pem \
  --etcd-keyfile={{pki_dir}}/kubernetes-key.pem \
  --etcd-servers={{ETCD_SERVER_URLS}} \
  --event-ttl=1h \
  --kubelet-certificate-authority={{pki_dir}}/ca.pem \
  --kubelet-client-certificate={{pki_dir}}/kubernetes.pem \
  --kubelet-client-key={{pki_dir}}/kubernetes-key.pem \
  --max-mutating-requests-inflight 1000 \
  --max-requests-inflight 2000 \
  --proxy-client-cert-file={{pki_dir}}/kube-aggregator.pem \
  --proxy-client-key-file={{pki_dir}}/kube-aggregator-key.pem \
  --requestheader-allowed-names=apiserver,aggregator \
  --requestheader-client-ca-file={{pki_dir}}/ca.pem \
  --requestheader-extra-headers-prefix=X-Remote-Extra- \
  --requestheader-group-headers=X-Remote-Group \
  --requestheader-username-headers=X-Remote-User \
  --runtime-config='api/all=true' \
  --service-account-issuer=https://{{APISERVER}} \
  --service-account-key-file={{pki_dir}}/service-account.pem \
  --service-account-signing-key-file={{pki_dir}}/service-account-key.pem \
  --service-cluster-ip-range={{SERVICE_CLUSTER_IP_RANGE}} \
  --service-node-port-range=15000-32767 \
  --storage-backend=etcd3 \
  --storage-media-type=application/json \
  --tls-cert-file={{pki_dir}}/kubernetes.pem \
  --tls-private-key-file={{pki_dir}}/kubernetes-key.pem \
  --v=2
Restart=on-failure
RestartSec=5

[Install]
WantedBy=multi-user.target
