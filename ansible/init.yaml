---
- name: root and system level
  hosts: all
  tasks:
  - name: Seconds since last apt-get update
    ansible.builtin.shell: echo $(($(date +"%s") - $(stat -c %Y /var/cache/apt/)))
    register: apt_get_update_secs

  - name: base packages
    become: yes
    block:
    - name: apt-get update
      when: apt_get_update_secs.stdout|int > 1800
      apt: update_cache=yes

    - name: Install a suite of common tools
      apt:
        pkg:
          [ zsh, wget, curl, htop, nmap, netcat, strace, fping, bmon, iptraf-ng, tmux ]

    - name: Virtualization software
      apt:
        state: present
        pkg:
          [ qemu ]

  - name: docker.io
    become: yes
    block:
      - name: packages needed to get started
        apt:
          state: present
          pkg:
            [ apt-transport-https, ca-certificates, curl, gnupg-agent, software-properties-common ]
      - name: repo GPG key
        shell: |
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
      - name: adding the repo
        apt_repository:
          repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
          state: present
      - name: apt-get update
        apt: update_cache=yes
      - name: docker packages
        apt:
          state: present
          pkg:
            [ docker-ce, docker-ce-cli, containerd.io ]
      - name: test docker run
        command: "{{ item }}"
        with_items:
        - docker run --rm hello-world

  - name: enable and start all services
    become: yes
    systemd:
      enabled: yes
      state: started
      name: docker
    systemd:
      enabled: yes
      state: started
      name: ssh

  - name: login user specific
    block:
      - name: check oh_my_zsh installed
        ansible.builtin.shell: test -d ~/.oh-my-zsh
        register: oh_my_zsh_installed

      - name: check p10k installed
        ansible.builtin.shell: grep -q powerlevel10k ~/.zshrc
        register: p10k_installed

      - name: check ultimate vim installed
        ansible.builtin.shell: test -d ~/.vim_runtime
        register: ultimate_vim_installed

      - name: oh my zsh
        when: oh_my_zsh_installed.rc == 1
        command: "{{ item }}"
        with_items:
        - curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -o install.sh
        - chmod +x ./install.sh
        - ./install.sh
        - rm ./install.sh

      - name: powerlevel10k
        when: p10k_installed.rc == 1
        command: "{{ item }}"
        with_items:
        - git clone --depth=1 https://gitee.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k

      - name: Replace before the expression till the begin of the file (requires Ansible >= 2.4)
        when: p10k_installed.rc == 1
        ansible.builtin.replace:
          path: ~/.zshrc
          regexp: '^ZSH_THEME=.*$'
          replace: 'ZSH_THEME="powerlevel10k/powerlevel10k"'

      - name: p10k config
        copy:
          src: files/.p10k.zsh
          dest: ~/.p10k.zsh

      - name: ultimate vim
        when: ultimate_vim_installed.rc != 0
        command: "{{ item }}"
        with_items:
          - git clone --depth=1 https://github.com/amix/vimrc.git ~/.vim_runtime
          - sh ~/.vim_runtime/install_awesome_vimrc.sh
