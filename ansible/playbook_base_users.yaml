- name: Install and configure zsh and tools for users
  hosts: all
  become: true
  vars_files:
    - vars_users.yaml

  tasks:
    - name: Handle dpkg locks and repair
      include_tasks: subtask_fix_dpkg_lock.yaml
      ignore_errors: yes

    - name: Update apt cache if not done in the last 24 hours
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 86400  # 24 hours

    - name: Install common packages
      apt:
        name: "{{ item }}"
        state: latest
      with_items:
        - zsh
        - git
        - cron
      ignore_errors: yes

    # Define user details explicitly with correct home directories
    - name: Set user details
      set_fact:
        users:
          - { user_name: "debian", user_home: "/home/debian" }
          - { user_name: "root", user_home: "/root" }

    - name: Download oh-my-zsh installer
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
        dest: /tmp/oh-my-zsh-installer.sh
        mode: "0755"
      loop: "{{ users }}"
      loop_control:
        loop_var: user
      ignore_errors: yes

    - name: Install oh-my-zsh
      ansible.builtin.shell: /tmp/oh-my-zsh-installer.sh --unattended
      args:
        creates: "{{ user.user_home }}/.oh-my-zsh"
      loop: "{{ users }}"
      loop_control:
        loop_var: user
      ignore_errors: yes

    - name: Ensure .zshrc is created
      ansible.builtin.copy:
        src: "{{ user.user_home }}/.oh-my-zsh/templates/zshrc.zsh-template"
        dest: "{{ user.user_home }}/.zshrc"
        remote_src: yes
        force: no  # Only create if not exists
      loop: "{{ users }}"
      loop_control:
        loop_var: user
      ignore_errors: yes

    - name: Set ZSH directory in .zshrc
      ansible.builtin.lineinfile:
        path: "{{ user.user_home }}/.zshrc"
        regexp: '^ZSH='
        line: 'ZSH="{{ user.user_home }}/.oh-my-zsh"'
      loop: "{{ users }}"
      loop_control:
        loop_var: user
      ignore_errors: yes

    - name: Set powerlevel10k theme in .zshrc
      ansible.builtin.lineinfile:
        path: "{{ user.user_home }}/.zshrc"
        state: present
        regexp: '^ZSH_THEME='
        line: 'ZSH_THEME="powerlevel10k/powerlevel10k"'
      loop: "{{ users }}"
      loop_control:
        loop_var: user
      ignore_errors: yes

    - name: Disable powerlevel10k configuration wizard
      ansible.builtin.lineinfile:
        path: "{{ user.user_home }}/.zshrc"
        state: present
        line: 'POWERLEVEL9K_DISABLE_CONFIGURATION_WIZARD=true'
      loop: "{{ users }}"
      loop_control:
        loop_var: user
      ignore_errors: yes

    - name: Change user shell to zsh
      ansible.builtin.shell: chsh -s /usr/bin/zsh {{ user.user_name }}
      loop: "{{ users }}"
      loop_control:
        loop_var: user
      ignore_errors: yes

    - name: Copy p10k config file
      ansible.builtin.copy:
        src: files/shell/p10k.zsh
        dest: "{{ user.user_home }}/.p10k.zsh"
        mode: "0755"
      loop: "{{ users }}"
      loop_control:
        loop_var: user
      ignore_errors: yes

    - name: Copy tmux config
      ansible.builtin.copy:
        src: files/shell/tmux.conf
        dest: "{{ user.user_home }}/.tmux.conf"
      loop: "{{ users }}"
      loop_control:
        loop_var: user
      ignore_errors: yes
