- name: Nvidia Driver, encoding patch, and Containerd config
  hosts: all
  vars_files:
    - vars_kube.yaml
  vars:
    nvidia_version: "495.46"

  tasks:
  - name: Driver and Patch
    become: yes
    when: nvidia_gpu is defined

    block:
    - name: stop  services using driver
      ansible.builtin.systemd:
        state: stopped
        daemon_reload: true
        name: "{{item}}"
      ignore_errors: true
      with_items:
        - containerd
        - kubelet

    - name: print debug
      debug:
        msg: "Installing {{nvidia_version}} driver"

    - name: blacklist the nuevo driver
      copy:
        dest: /etc/modprobe.d/blacklist-nvidia-nouveau.conf
        content: |
          blacklist nouveau
          options nouveau modeset=0
        force: yes
        mode: 0644
        group: root
        owner: root

    - name: set kernel version
      register: kernel_version
      shell:
        cmd: uname -r

    - name: apt install kernel headers
      apt:
        update_cache: true
        pkg: "linux-headers-{{kernel_version.stdout}}"

    - name: unload kernel drivers
      ignore_errors: true
      command: rmmod "{{item}}"
      with_items:
      - nouveau
      - nvidia_drm
      - nvidia_modeset
      - nvidia

    - name: remove nvidia files
      ignore_errors: true
      shell: rm -fv "{{item}}"
      with_items:
      - /kernel/drivers/video/nvidia*
      - /usr/bin/nvidia*
      - /usr/lib/libcuda*
      - /usr/lib/libGL*
      - /usr/lib/libnvcuvid*
      - /usr/lib/libnvidia*
      - /usr/lib/libOpenCL*
      - /usr/lib/tls/libnvidia*
      - /usr/lib/vendors/nvidia*

    - name: run nvidia uninstallers
      ignore_errors: yes
      apt:
        name: "{{item}}"
        state: absent
        purge: true
      with_items:
      - nvidia-container-runtime
      - nvidia-container-toolkit
      - nvidia-utils-{{nvidia_version.split('.')[0]}}
      - nvidia-driver-{{nvidia_version.split('.')[0]}}"

    - name: add nvidia apt gpg key
      apt_key:
        url: "{{item}}"
      with_items:
      - https://nvidia.github.io/nvidia-container-runtime/gpgkey
      - https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub

    - name: nvidia-container-runtime apt repo
      register: nvidia_apt_repo
      get_url:
        url: https://nvidia.github.io/nvidia-container-runtime/ubuntu20.04/nvidia-container-runtime.list
        dest: /etc/apt/sources.list.d/nvidia-container-runtime.list

    - name: add the cuda repo
      register: nvidia_apt_repo
      copy:
        force: yes
        dest: /etc/apt/sources.list.d/nvidia-cuda.list
        content: |
          deb [trusted=yes] http://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/ /

    - name: apt install nvidia packages
      apt:
        update_cache: true
        force_apt_get: true
        allow-unauthenticated: true
        pkg:
        - nvidia-container-toolkit
        - nvidia-container-runtime
        - "nvidia-utils-{{nvidia_version.split('.')[0]}}"
        - "nvidia-driver-{{nvidia_version.split('.')[0]}}"
        # - "cuda-drivers-{{nvidia_version.split('.')[0]}}"

    - name: run nvidi-smi test
      ignore_errors: true
      shell:
        cmd: nvidia-smi

    - name: make sure nvidia kernel module is listed at boot
      copy:
        dest: /etc/modprobe.d/nvidia.conf
        content: |
          # install nvidia nvidia-modprobe -c 0 -c 1
        force: yes
        mode: 0644
        group: root
        owner: root

    # jinja template uses gpu var
    - name: register gpu var
      set_fact:
        nvidia_gpu: "{{nvidia_gpu}}"
    - name: Write Containerd config
      copy:
        force: yes
        content: '{{ lookup("template", "files/containerd/default.toml.j2") }}'
        dest: /etc/containerd/config.toml

    - name: update init ramfs
      shell:
        cmd: update-initramfs -u

    - name: Re-start related services
      ansible.builtin.systemd:
        state: restarted
        daemon_reload: true
        name: "{{item}}"
      ignore_errors: true
      with_items:
        - containerd
        - kubelet
