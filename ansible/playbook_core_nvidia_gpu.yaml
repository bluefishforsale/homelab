- name: Nvidia Driver, encoding patch, and Containerd config
  hosts: all
  vars:
    nvidia_version: "495.46"
    # nvidia_version: 510

  tasks:
  - name: Driver and Patch
    become: yes
    when: nvidia_gpu is defined

    block:
    - name: stop  services using driver
      ansible.builtin.systemd:
        state: stopped
        daemon_reload: true
        name: "{{item}}"
      ignore_errors: true
      with_items:
        - containerd
        - kubelet

    - name: print debug
      debug:
        msg: "Installing {{nvidia_version}} driver"

    - name: blacklist the nuevo driver
      copy:
        dest: /etc/modprobe.d/blacklist-nvidia-nouveau.conf
        content: |
          blacklist nouveau
          options nouveau modeset=0
        force: yes
        mode: 0644
        group: root
        owner: root

    - name: set kernel version
      register: kernel_version
      shell:
        cmd: uname -r

    - name: apt install kernel headers
      apt:
        update_cache: true
        pkg: "linux-headers-{{kernel_version.stdout}}"

    - name: download nvidia binary installer
      get_url:
        url: "https://international.download.nvidia.com/XFree86/Linux-x86_64/{{nvidia_version}}/NVIDIA-Linux-x86_64-{{nvidia_version}}.run"
        dest: "/tmp/NVIDIA-Linux-x86_64-{{nvidia_version}}.run"
        mode: 0755
        owner: root
        group: root

    - name: unload kernel drivers
      ignore_errors: true
      command: rmmod "{{item}}"
      with_items:
      - nouveau
      - nvidia_drm
      - nvidia_modeset
      - nvidia

    - name: remove nvidia driver just in case
      ignore_errors: yes
      command: /tmp/NVIDIA-Linux-x86_64-"{{nvidia_version}}".run --uninstall -s -n -a

    - name: install nvidia driver from binary
      ignore_errors: yes
      shell: /tmp/NVIDIA-Linux-x86_64-"{{nvidia_version}}".run -a -n -s --systemd -z --no-x-check -b -r

    - name: add nvidia apt gpg key
      apt_key:
        url: "{{item}}"
      with_items:
      - https://nvidia.github.io/nvidia-container-runtime/gpgkey
      - https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub

    - name: nvidia-container-runtime apt repo
      register: nvidia_apt_repo
      get_url:
        url: https://nvidia.github.io/nvidia-container-runtime/ubuntu20.04/nvidia-container-runtime.list
        dest: /etc/apt/sources.list.d/nvidia-container-runtime.list

    - name: add the cuda repo
      register: nvidia_apt_repo
      copy:
        force: yes
        dest: /etc/apt/sources.list.d/nvidia-cuda.list
        content: |
          deb [trusted=yes] http://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/ /

        # - "nvidia-driver-{{nvidia_version.split('.')[0]}}"
        # - cuda
    - name: apt install nvidia packages
      apt:
        update_cache: true
        force_apt_get: true
        allow-unauthenticated: true
        pkg:
        - "nvidia-utils-{{nvidia_version.split('.')[0]}}"
        - nvidia-container-runtime

    - name: run nvidi-smi test
      ignore_errors: true
      shell:
        cmd: nvidia-smi

    # - name: keylase nvidia-patch from source
    #   unarchive:
    #     remote_src: yes
    #     src: https://github.com/keylase/nvidia-patch/archive/refs/heads/master.zip
    #     dest: /tmp
    #     keep_newer: yes

    # - name: install patch
    #   shell: "{{item}}"
    #   with_items:
    #     - "/tmp/nvidia-patch-master/patch.sh"
    #     - "/tmp/nvidia-patch-master/patch-fbc.sh"

    - name: make sure nvidia kernel module is listed at boot
      copy:
        dest: /etc/modprobe.d/nvidia.conf
        content: |
          # install nvidia nvidia-modprobe -c 0 -c 1
        force: yes
        mode: 0644
        group: root
        owner: root

    # - name: containerd runtime nvidia update
    #   ignore_errors: true
    #   copy:
    #     dest: /etc/containerd/config.toml
    #     src: files/containerd/config.nvidia.toml
    #     force: yes
    #     mode: 0644
    #     group: root
    #     owner: root

    - name: update init ramfs
      shell:
        cmd: update-initramfs -u

    - name: Re-start related services
      ansible.builtin.systemd:
        state: restarted
        daemon_reload: true
        name: "{{item}}"
      ignore_errors: true
      with_items:
        - containerd
        - kubelet
