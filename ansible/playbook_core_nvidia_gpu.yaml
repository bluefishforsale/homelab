---
- name: Nvidia Driver, encoding patch, and Containerd config
  hosts: all
  vars_files:
    - vars_kube.yaml

  tasks:
    - name: Driver and Patch
      become: true
      when: nvidia_gpu is defined

      block:
      - name: Stop containerd / kubelet
        ansible.builtin.systemd:
          state: stopped
          name: "{{ item }}"
        ignore_errors: true
        with_items:
          - containerd
          - kubelet

      - name: Blacklist the nouveau driver
        ansible.builtin.copy:
          dest: /etc/modprobe.d/blacklist-nvidia-nouveau.conf
          content: |
            blacklist nouveau
            options nouveau modeset=0
          force: yes
          mode: 0644
          group: root
          owner: root

      - name: Kill any running apt-get process
        ansible.builtin.shell: killall apt-get
        ignore_errors: true

      - name: Wait for /var/lib/dpkg/lock-frontend to be released
        ansible.builtin.shell: while lsof /var/lib/dpkg/lock-frontend ; do sleep 10; done;

      - name: Add contrib and non-free repositories
        ansible.builtin.command:
          cmd: "apt-add-repository -yn contrib non-free"
        register: repo_add
        changed_when: "'Added' in repo_add.stdout"

      - name: Add NVIDIA container runtime repository
        ansible.builtin.copy:
          dest: /etc/apt/sources.list.d/nvidia-container-runtime.list
          content: |
            deb https://nvidia.github.io/libnvidia-container/stable/deb/{{ ansible_architecture }} /
            deb https://nvidia.github.io/libnvidia-container/stable/debian10/{{ ansible_architecture }} /
        register: nvidia_repo
        notify: update apt cache

      - name: Update apt cache after adding repositories
        ansible.builtin.apt:
          update_cache: yes
        when: repo_add.changed or nvidia_repo.changed

      - name: Remove the nouveau module
        ansible.builtin.command: rmmod nouveau
        ignore_errors: true

      - name: Nvidia GPG key
        ansible.builtin.get_url:
          url: https://nvidia.github.io/nvidia-container-runtime/gpgkey
          dest: /usr/share/keyrings/nvidia-container-runtime.gpg

      - name: Set kernel version
        ansible.builtin.shell:
          cmd: uname -r
        register: kernel_version

      - name: Install kernel headers and DKMS
        apt:
          name:
            - "linux-headers-{{ kernel_version.stdout.strip() }}"
            - dkms
          state: latest
        register: apt_status
        until: apt_status is success
        delay: 3
        retries: 30

      - name: Apt install NVIDIA driver and runtime
        apt:
          name:
            - nvidia-driver
            - nvidia-container-runtime
            - nvidia-container-toolkit
          state: latest
        register: apt_status
        until: apt_status is success
        delay: 6
        retries: 30

      - name: Install additional required packages
        apt:
          name:
            - build-essential
            - curl
            - software-properties-common
          state: latest

      - name: Test the host nvidia-smi
        ansible.builtin.shell:
          cmd: nvidia-smi
        register: smi_output
        failed_when: "'NVIDIA-SMI has failed' in smi_output.stdout"

      - name: Update init ramfs
        ansible.builtin.shell:
          cmd: update-initramfs -u

      - name: Reboot target to apply changes
        reboot:
          reboot_timeout: 600

      - name: Start containerd / kubelet
        ansible.builtin.systemd:
          state: started
          name: "{{ item }}"
        with_items:
          - containerd
          - kubelet
        when: apt_status is success
