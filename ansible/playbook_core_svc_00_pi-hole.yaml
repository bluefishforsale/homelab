---
- name: Install Pi-hole on Debian 12
  hosts: pi-hole
  become: true

  tasks:
    ############  fix dpkg if things went sideways #####################
    - name: Killall fuser
      ansible.builtin.command: "killall fuser ; killall dpkg"
      ignore_errors: true

    - name: Fuser TERM
      ansible.builtin.command: fuser -vki -TERM /var/lib/dpkg/lock /var/lib/dpkg/lock-frontend
      ignore_errors: true
      register: fuser_term

    - name: Debug Fuser TERM
      ansible.builtin.debug:
        msg: "fuser TERM: {{ fuser_term.stdout }}"
      ignore_errors: true
      when: fuser_term.rc != 0

    - name: Fuser KILL
      ansible.builtin.command: fuser -vki -KILL /var/lib/dpkg/lock /var/lib/dpkg/lock-frontend
      when: fuser_term.rc != 0
      ignore_errors: true
      register: fuser_kill

    - name: Debug Fuser KILL
      ansible.builtin.debug:
        msg: "fuser kill: {{ fuser_kill.stdout }}"
      when: fuser_kill.rc != 0

    - name: Dpkg repair
      ansible.builtin.command: dpkg --configure --pending
      register: dpkg_repair

    - name: Debug Dpkg repair
      ansible.builtin.debug:
        msg: "dpkg repair: {{ dpkg_repair.stdout }}"
      when: dpkg_repair.rc != 0

    ############  apt install #####################
    - name: update cache once
      ansible.builtin.apt:
        update_cache: true

    - name: Install prerequisites
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      loop:
        - curl
        - procps
        - lsb-release

    - name: Add Pi-hole repository
      ansible.builtin.apt_repository:
        repo: deb https://packages.pi-hole.net/debian {{ ansible_distribution_release }} main
        state: present
        filename: pihole

    - name: Install Pi-hole
      ansible.builtin.apt:
        name: pi-hole
        state: present

    - name: Configure Pi-hole
      ansible.builtin.command: pihole -r
      environment:
        AUTO_INSTALL: 1

    - name: Restart DNS and Web services
      ansible.builtin.service:
        name: "{{ item }}"
        state: restarted
        enabled: true
      loop:
        - pihole-FTL
        - lighttpd

    - name: Update Pi-Hole
      ansible.builtin.command: pihole -u

    - name: Enable Pi-hole at startup
      ansible.builtin.systemd:
        name: pihole-FTL
        enabled: true

    - name: Set Pi-hole admin password
      ansible.builtin.command: pihole -a -p "{{ your_admin_password }}"
      environment:
        PIHOLE_SKIP_OS_CHECK: 1
      no_log: true

