- name: Kube 04.1 Gen PKI
  hosts: local
  vars_files:
    - vars_kube.yaml

  tasks:
  - name: Generate Kubernetes Control Plane CA TLS Certs
    block:

    - name: install cfssl
      delegate_to: localhost
      community.general.homebrew:
        name: cfssl
        state: present

    - name: Certificate Authority
      delegate_to: localhost
      shell:
        cmd: cfssl gencert -initca ca-csr.json | cfssljson -bare ca
        chdir: "{{ cfssl }}"
        creates:
          - ca-key.pem
          - ca.pem
          - ca.csr

    - name: The Admin Client Certificate
      delegate_to: localhost
      shell:
        cmd: cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes admin-csr.json | cfssljson -bare admin
        chdir: "{{ cfssl }}"

    - name: Controller Manager Client Certificate
      delegate_to: localhost
      shell:
        cmd: cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager
        chdir: "{{ cfssl }}"

    - name: Kube Proxy Client Certificate
      delegate_to: localhost
      shell:
        cmd: cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes kube-proxy-csr.json | cfssljson -bare kube-proxy
        chdir: "{{ cfssl }}"

    - name: Scheduler Client Certificate
      delegate_to: localhost
      shell:
        cmd: cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes kube-scheduler-csr.json | cfssljson -bare kube-scheduler
        chdir: "{{ cfssl }}"

    #### Bulding variables
    - name: Hostname expansion into dict of name:ip
      set_fact:
        HOST_IP: "{{ HOST_IP | combine({ item: lookup('community.general.dig', item) }) }}"
      loop: "{{ groups['k8s_controller'] + [APISERVER]}}"

    - name: Flatten dict to formatted string, store PEERS_MAP
      set_fact:
        PEERS_MAP: "{{ PEERS_MAP }}{{ (index > 0)|ternary(',','') }}{{ item.key }},{{ item.value }}"
      loop: "{{  HOST_IP | dict2items }}"
      loop_control:
        index_var: index

    - name: API Server Certificate
      delegate_to: localhost
      shell:
        cmd: cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=127.0.0.1,172.18.0.1,{{KUBERNETES_HOSTNAMES}},{{PEERS_MAP}} -profile=kubernetes kubernetes-csr.json | cfssljson -bare kubernetes
        chdir: "{{ cfssl }}"

    - name: Service Account Key Pair
      delegate_to: localhost
      shell:
        cmd: cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes service-account-csr.json | cfssljson -bare service-account
        chdir: "{{ cfssl }}"

    # Node Client Certs
    - name: Client Certs
      delegate_to: localhost
      include: subtask_kube_node_certs.yaml file={{item}}
      with_inventory_hostnames:
      - k8s