- name: Kube 08 Kubernetes apiserver, controller-manager, scheduler
  hosts: k8s_controller
  strategy: linear
  become: true
  vars_files:
    - vars_kube.yaml

  tasks:
  - name: Kubernetes
    block:
    - name: Check exists {{ controller_datapath }}
      file:
        path: "{{ controller_datapath }}"
        state: directory
        mode: "0755"
        group: root
        owner: root

    - name: Check exists {{ controller_instpath }}
      file:
        state: directory
        mode: "0755"
        path: "{{ controller_instpath }}"

    - name: Check exists {{ controller_confpath }}
      file:
        path: "{{ controller_confpath }}"
        state: directory
        mode: "0755"
        group: root
        owner: root

    - name: Installing Kubernetes {{ KUBE_VERSION }}
      with_items: "{{controller_filenames}}"
      get_url:
        url: "{{ KUBE_URL }}/{{ item }}"
        dest: "{{ controller_instpath }}/{{ item }}"
        mode: "0755"

  - name: Kube SystemD templates
    block:
      # Make variables for the Kubernetes configfile
      - name: Get hosts, store in HOST_IP {{ item }}
        set_fact:
          HOST_IP: "{{ HOST_IP | combine({ item: lookup('community.general.dig', item) }) }}"
        loop: "{{ groups['k8s_controller'] }}"

      - name: Get IP for single APISERVER
        set_fact:
          APISERVER_IP: "{{ lookup('community.general.dig', APISERVER) }}"

      - name: Get IP for all host list
        set_fact:
          PEERS_IP: "{{ PEERS_IP | combine({ item: lookup('community.general.dig', item) }) }}"
        loop: "{{ groups['etcd'] }}"

      - name: Flatten dict to formatted string
        set_fact:
          ETCD_SERVER_URLS : "{{ ETCD_SERVER_URLS }}{{ (index > 0)|ternary(',','') }}https://{{item.value}}:2379"
        loop: "{{  PEERS_IP | dict2items }}"
        loop_control:
          index_var: index

      # Create the config file from template
      - name: Systemd service {{item}}
        copy:
          force: true
          dest: "/etc/systemd/system/{{ item }}.service"
          content: '{{ lookup("template", "files/kubernetes/{{ item }}.service.j2") }}'
          mode: "0644"
          group: root
          owner: root
        with_items:
          - kube-apiserver
          - kube-scheduler
          - kube-controller-manager

      - name: Kube-scheduler yaml
        copy:
          force: true
          dest: "/etc/kubernetes/config/kube-scheduler.yaml"
          content: '{{ lookup("template", "files/kubernetes/kube-scheduler.yaml.j2") }}'
          mode: "0644"
          group: root
          owner: root

      - name: Enable and restart {{ item }}
        systemd:
          name: "{{ item }}"
          state: restarted
          enabled: true
          daemon_reload: true
        with_items:
          - kube-scheduler
          - kube-apiserver
          - kube-controller-manager
