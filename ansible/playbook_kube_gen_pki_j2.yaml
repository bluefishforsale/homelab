- name: Gleaming the Kubeâ„¢
  hosts: local
  vars:
    kube_api_server:
      "k8s_lb_ip": 192.168.1.99
      "k8s_lb_name": 192.168.1.99
      "k8s_lb_nodename": node000.home
      "k8s_lb_nodeip": 192.168.1.100
    CSR:
      C: "US"
      L: "BearEay"
      OU: "KxTHW Bare Metal"
      ST: "California"

  tasks:
  - name: Generate Kubernetes Control Plane CA TLS Certs
    block:

    - name: install cfssl
      delegate_to: localhost
      community.general.homebrew:
        name: cfssl
        state: present

    - name: Copy the CA config into Pki working dir
      delegate_to: localhost
      copy:
        src: files/cfssl/templates/ca-config.json
        dest: files/cfssl/pki/ca-config.json

    - name: Create admin-csr.json
      delegate_to: localhost
      template:
        src: cfssl/templates/csr-template.json.j2
        dest: files/cfssl/pki/ca-csr.json

    - name: GEN Certificate Authority
      delegate_to: localhost
      shell:
        cmd: cfssl gencert -initca ca-csr.json | cfssljson -bare ca
        chdir: files/cfssl/pki

    - name: Create admin-csr.json
      delegate_to: localhost
      template:
        src: cfssl/templates/csr-template.json.j2
        dest: files/cfssl/pki/admin-csr.json

    - name: GEN The Admin Client Certificate
      delegate_to: localhost
      shell:
        cmd: cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes admin-csr.json | cfssljson -bare admin
        chdir: files/cfssl/pki

    - name: Loop over json files and gen keys and public certs
      delegate_to: localhost
      shell:
        cmd: cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes admin-csr.json | cfssljson -bare admin
        chdir: files/cfssl/pki


    # # kublet nodes subtask (re-run when new hosts are added)
    # - name: Client Certs
    #   delegate_to: localhost
    #   include: subtask_kube_node_certs.yaml file={{item}}
    #   with_inventory_hostnames:
    #   - k8s

    # - name: Controller Manager Client Certificate
    #   delegate_to: localhost
    #   shell:
    #     cmd: cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager
    #     chdir: files/cfssl

    # - name: Kube Proxy Client Certificate
    #   delegate_to: localhost
    #   shell:
    #     cmd: cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes kube-proxy-csr.json | cfssljson -bare kube-proxy
    #     chdir: files/cfssl

    # - name: Scheduler Client Certificate
    #   delegate_to: localhost
    #   shell:
    #     cmd: cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes kube-scheduler-csr.json | cfssljson -bare kube-schedulerkube-proxy
    #     chdir: files/cfssl

    # - name: API Server Certificate
    #   delegate_to: localhost
    #   shell:
    #     cmd: cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=127.0.0.1,172.18.0.1,{{kube_api_server.k8s_lb_nodeip}},{{kube_api_server.k8s_lb_nodename}},{{kube_api_server.k8s_lb_ip}},{{kube_api_server.k8s_lb_name}},kubernetes.internal -profile=kubernetes kubernetes-csr.json | cfssljson -bare kubernetes
    #     chdir: files/cfssl

    # - name: Service Account Key Pair
    #   delegate_to: localhost
    #   shell:
    #     cmd: cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes service-account-csr.json | cfssljson -bare service-account
    #     chdir: files/cfssl