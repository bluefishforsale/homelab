- name: Nvidia Driver, encoding patch, and Containerd config
  hosts: all
  vars:
    nvidia_version: "495.46"
    # nvidia_version: "495.29"

  tasks:
  - name: Driver and Patch
    become: yes
    when: nvidia_gpu is defined

    block:
    - name: print debug
      debug:
        msg: "Installing {{nvidia_version}} driver"

    - name: stop containerd service
      systemd:
        state: stopped
        name: "{{item}}"
      ignore_errors: yes
      with_items:
        - kube-scheduler
        - kube-apiserver
        - kube-controller-manager
        - kubelet
        - kube-proxy
        - containerd

    - name: set kernel version
      register: kernel_version
      shell:
        cmd: uname -r

    - name: apt install kernel headers
      apt:
        pkg: "linux-headers-{{kernel_version.stdout}}"

    # - name: download CUDA toolkit
    #   get_url:
    #     url: https://developer.download.nvidia.com/compute/cuda/11.5.1/local_installers/cuda_11.5.1_495.29.05_linux.run
    #     dest: "/tmp/cuda_11.5.1_495.29.05_linux.run"
    #     mode: "0775"

    # - name: install toolkit
    #   shell: >
    #     /tmp/cuda_11.5.1_495.29.05_linux.run
    #     --driver
    #     --toolkit

    - name: download nvidia driver
      get_url:
        url: https://international.download.nvidia.com/XFree86/Linux-x86_64/{{nvidia_version}}/NVIDIA-Linux-x86_64-{{nvidia_version}}.run
        dest: "/tmp/NVIDIA-Linux-x86_64-{{nvidia_version}}.run"
        mode: "0775"

    - name: install nvidia driver
      shell: >
        "/tmp/NVIDIA-Linux-x86_64-{{nvidia_version}}.run"
        --accept-license
        --dkms
        --no-questions
        --skip-module-unload

    - name: run nvidi-smi test
      shell:
        cmd: nvidia-smi

    - name: keylase nvidia-patch
      unarchive:
        remote_src: yes
        src: https://github.com/keylase/nvidia-patch/archive/refs/heads/master.zip
        dest: /tmp
        keep_newer: yes

    - name: install patch
      shell: >
        bash /tmp/nvidia-patch/patch

    - name: containerd runtime config update
      lineinfile:
        path: /etc/containerd/config.toml
        state: present
        backrefs: yes
        regexp: '^([ \t]+SystemdCgroup[ \t]+=[ \t]+)false'
        line: '\1true'

    - name: Re-start containerd service
      ansible.builtin.systemd:
        state: restarted
        daemon_reload: yes
        name: "{{item}}"
      ignore_errors: yes
      with_items:
        - containerd
        - kube-scheduler
        - kube-apiserver
        - kube-controller-manager
        - kubelet
        - kube-proxy