---
- name: Loop over all users and call user_template playbook
  hosts: all
  vars_files:
    - vars_users.yaml
  vars:
    github: bluefishforsale

  tasks:
    - name: Stuff done for logged in user
      block:

      - name: install oh-my-zsh
        command: "curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | bash -"
        args:
          creates: "{{ lookup('env','HOME') }}/.oh-my-zsh"

      - name: Change user shell to zsh
        shell:
          cmd: chsh -s /bin/zsh

      - name: install powerlevel10k
        git:
          repo: https://github.com/romkatv/powerlevel10k
          dest: "{{ lookup('env','HOME') }}/.oh-my-zsh/themes/powerlevel10k"
          accept_hostkey: yes
          force: yes
          depth: 1

      - name: Set p10k THEME in .zshrc
        lineinfile:
          path: "{{ lookup('env','HOME') }}/.zshrc"
          state: present
          backrefs: yes
          regexp: '^ZSH_THEME='
          line: 'ZSH_THEME="powerlevel10k/powerlevel10k"'

      - name: p10k config file
        copy:
          force: yes
          src: files/shell/p10k.zsh
          dest: "{{ lookup('env','HOME') }}/.p10k.zsh"

      - name: P10k DISABLE_CONFIGURATION_WIZARD
        lineinfile:
          path: "{{ lookup('env','HOME') }}/.zshrc"
          state: present
          line: 'POWERLEVEL9K_DISABLE_CONFIGURATION_WIZARD=true'

      - name: ultimate vim
        shell:
          cmd: git clone --depth=1 https://github.com/amix/vimrc.git "{{ lookup('env','HOME') }}/.vim_runtime"

      - name: tmux conf
        copy:
          force: yes
          src: files/shell/tmux.conf
          dest: "{{ lookup('env','HOME') }}/.tmux.conf"

    - name: Stuff done for root
      block:
      - name: Add github keys to user
        become: yes
        authorized_key:
          user: root
          state: present
          key: "https://github.com/{{github}}.keys"

      - name: Sudo group gets passwordless sudo access
        lineinfile:
          path: /etc/sudoers
          state: present
          regexp: '^%sudo'
          line: '%sudo ALL=(ALL) NOPASSWD: ALL'

      - name: install oh-my-zsh into root
        shell:
          cmd: curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | bash -
          creates: /root/.oh-my-zsh

      - name: Change root shell to zsh
        shell:
          cmd: chsh -s /bin/zsh root

      - name: move oh-my-zsh to /usr/share
        shell:
          cmd: cp -r /root/.oh-my-zsh /usr/share/oh-my-zsh

      # - name: copy zshrc template
      #   shell:
      #     cmd: cp /usr/share/oh-my-zsh/templates/zshrc.zsh-template /usr/share/oh-my-zsh/zshrc

      # - name: /etc/skel zshrc symlink
      #   shell:
      #     cmd: ln -sf /usr/share/oh-my-zsh/zshrc /etc/skel/.zshrc

      - name: install powerlevel10k
        git:
          repo: https://github.com/romkatv/powerlevel10k
          dest: /root/.oh-my-zsh/themes/powerlevel10k
          accept_hostkey: yes
          force: yes
          depth: 1

      - name: Set p10k THEME in .zshrc
        lineinfile:
          path: /root/.zshrc
          state: present
          backrefs: yes
          regexp: '^ZSH_THEME='
          line: 'ZSH_THEME="powerlevel10k/powerlevel10k"'

      - name: p10k config file
        copy:
          force: yes
          src: files/shell/p10k.zsh
          dest: /root/.p10k.zsh

      - name: P10k DISABLE_CONFIGURATION_WIZARD
        lineinfile:
          path: /root/.zshrc
          state: present
          line: 'POWERLEVEL9K_DISABLE_CONFIGURATION_WIZARD=true'

      - name: ultimate vim
        shell:
          cmd: "{{ local_item }}"
          creates: /etc/skel/.vim_runtime
        with_items:
          - git clone --depth=1 https://github.com/amix/vimrc.git /etc/skel/.vim_runtime
          - mkdir -p /usr/share/vim_runtime
          - cmod -R 1755 /usr/share/vim_runtime
          - sh /tmp/.vim_runtime/install_awesome_vimrc.shsh /etc/skel/.vim_runtime/install_awesome_vimrc.sh
          - cp -rp /root/.vimrc /etc/skel
        loop_control:
          loop_var: local_item

      - name: tmux conf
        copy:
          force: yes
          src: files/shell/tmux.conf
          dest: ~/.tmux.conf

      - name: Ensures /etc/skel/.config/glances path exists
        file:
          path: /etc/skel/.config/glances
          state: directory

      - name: Install glances (better htop)
        apt:
          pkg: glances

      - name: Glances conf
        copy:
          force: yes
          src: files/shell/glances.conf
          dest: /etc/skel/.config/glances/glances.conf

      # - name: add each user one at a time with some custom setup
      #   include_tasks: subtask_user.yaml
      #   loop: "{{ user }}"
