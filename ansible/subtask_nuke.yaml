---
- name: stop all services
  ignore_errors: true
  systemd:
    name: "{{item}}"
    state: stopped
    enabled: false
  with_items:
  - etcd
  - containerd
  - haproxy
  - kube-scheduler
  - kube-apiserver
  - kube-controller-manager
  - kubelet

# - name: Get kube-pods services
#   shell: "systemctl status *kube* 2>/dev/null | grep ‚óè | awk '{print $2}'"
#   register: running_kube_systemd

# - name: stop kube-pods
#   ignore_errors: yes
#   systemd:
#     name: "{{item}}"
#     state: stopped
#   loop: "{{ running_kube_systemd.stdout.split('\n') }}"

- name: Get running processes
  ignore_errors: true
  shell: "ps -ef | grep -v grep | grep container | awk '{print $2}'"
  register: running_processes

- name: Kill running processes
  ignore_errors: true
  shell: "kill -9 {{item}}"
  with_items: "{{ running_processes.stdout_lines }}"

# # - name: Waiting until all running processes are killed
# #   wait_for:
# #     path: "/proc/{{ item }}/status"
# #     state: absent
# #   with_items: "{{ running_processes.stdout_lines }}"

- name: remove trees
  ignore_errors: true
  shell:
    find "{{ item }}/" -delete
  with_items:
  - /etc/cni
  - /etc/containerd
  - /etc/etcd
  - /etc/haproxy
  - /opt/containerd
  - /run/containerd
  - /usr/libexec/kubernetes
  - /var/lib/containerd
  - /var/lib/etcd
  - /var/lib/kubelet
  - /var/lib/kubernetes/var/lib/kubernetes
  - /var/lib/rook
  - /var/lib/ceph

- name: remove files
  ignore_errors: true
  file:
    path: "{{ item }}"
    state: absent
  with_items:
  - /etc/systemd/system/etcd.service
  - /etc/systemd/system/kube-scheduler.service
  - /etc/systemd/system/kube-controller-manager.service
  - /etc/systemd/system/kube-proxy.service
  - /etc/systemd/system/containerd.service
  - /etc/systemd/system/kube-apiserver.service
  - /etc/systemd/system/kubelet.service

  - name: daemon_reload
    ignore_errors: true
    systemd:
      daemon_reload: true

- name: get CNI
  shell: "ip link show | awk '(/veth|cni|flannel|ipvs|lxc|cilium|kube-ipvs/ && /BROADCAST/){print $2}' | sort -uh | sed -e 's/://g' -e 's/@.*//g'"
  register: lxc_int

- name: delete CNI
  shell: ip link delete {{item}}
  with_items:
  - "{{ lxc_int.stdout_lines }}"

- name: copy ceph osd disk reset script
  copy:
    src: ceph/teardown.sh
    dest: /tmp/teardown.sh
    owner: root
    group: root
    mode: 0755

- name: run ceph osd disk reset script for each disk
  ignore_errors: true
  shell: /tmp/teardown.sh {{item}}
  with_items:
  - nvme0n1
  - sda
  - sdb
  - sdc
  - sdd
  - sde
  - sdf
  - sdg
  - sdh
