- name: Create the user and ensure grpups and sudo (done as root)
  become: yes
  become_user: root
  block:
  - name: change iterable item -> user so item can be used in this playbook
    set_fact:
      user: '{{ item }}'

  - name: check for user
    shell: id "{{ user.name }}"
    register: user_exists

  - name: Add required base users
    when: user_exists.rc != 0
    user:
      name: "{{ user.name }}"
      comment: "{{ user.First user.Last}}"
      shell: /bin/zsh
      group: "{{ user.name }}"
      groups: "{{ user.groups }}"
      append: yes
      generate_ssh_key: yes
      ssh_key_bits: 2048
      ssh_key_file: .ssh/id_rsa

  - name: Add github keys to "{{ user.name }}"
    authorized_key:
      user: "{{ user.name }}"
      state: present
      key: "https://github.com/{{ user.github }}.keys"

  - name: Passwordless Sudo for the Sudo Group (is this safe to re-run?)
    lineinfile:
      path: /etc/sudoers
      state: present
      regexp: '^%sudo'
      line: '%sudo ALL=(ALL) NOPASSWD: ALL'
      validate: 'visudo -cf %s'

- name: Installed as the user
  become: yes
  become_user: "{{ user.name }}"
  block:
  - name: check oh_my_zsh installed
    ansible.builtin.shell: test -d ~{{ user.name }}/.oh-my-zsh
    register: oh_my_zsh_installed

  - name: check p10k installed
    ansible.builtin.shell: grep -q powerlevel10k ~{{ user }}/.zshrc
    register: p10k_installed

  - name: check ultimate vim installed
    ansible.builtin.shell: test -d ~{{ user.name }}/vim_runtime
    register: ultimate_vim_installed

  - name: oh my zsh
    when: oh_my_zsh_installed.rc == 1
    become: yes
    become_user: "{{ user.name }}"
    command: "{{ item.name }}"
    with_items:
    - curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -o install.sh
    - chmod +x ./install.sh
    - ./install.sh
    - rm ./install.sh

  - name: powerlevel10k
    when: p10k_installed.rc == 1
    command: "{{ item.name }}"
    with_items:
    - git clone --depth=1 https://gitee.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k

  - name: Replace before the expression till the begin of the file (requires Ansible >= 2.4)
    when: p10k_installed.rc == 1
    lineinfile:
      path: "{{ user.name }}/.zshrc"
      state: present
      backrefs: yes
      regexp: '^ZSH_THEME=.*$'
      line: 'ZSH_THEME="powerlevel10k/powerlevel10k"'
      line: \g<1>:{{ }}
      validate: "source {{ user.name }}/.zshrc"

  - name: p10k config
    copy:
      src: files/p10k.zsh
      dest: ~/.p10k.zsh

  - name: ultimate vim
    when: ultimate_vim_installed.rc != 0
    command: "{{ item.name }}"
    with_items:
      - git clone --depth=1 https://github.com/amix/vimrc.git ~/.vim_runtime
      - sh ~/.vim_runtime/install_awesome_vimrc.sh

  - name: tmux conf
    copy:
      src: files/tmux.conf
      dest: ~/.tmux.conf

  - name: Glances conf
    copy:
      src: files/glances.conf
      dest: ~/.config/glances/glances.conf
