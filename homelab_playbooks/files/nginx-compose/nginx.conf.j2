user  nginx;
worker_processes  auto;  ## Auto-detect CPU cores
worker_rlimit_nofile 8192;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections  4096;  ## Default: 1024
  use epoll;  ## Efficient connection processing for Linux
  multi_accept on;  ## Accept multiple connections at once
}

http {
    # Basic logging and MIME types
    access_log        /var/log/nginx/access.log combined;
    error_log         /var/log/nginx/error.log warn;
    include           /etc/nginx/mime.types;
    default_type      application/octet-stream;
    
    # Log format
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    
    # Performance optimizations
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Security headers
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    
    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=strict:10m rate=2r/s;

    # Include service proxy configurations
    include /etc/nginx/conf.d/*.conf;

    # Default server (fallback)
    server {
        listen 80 default_server;
        server_name _;
        
        # Rate limiting
        limit_req zone=general burst=20 nodelay;
        
        location / {
            return 200 '<!DOCTYPE html><html><head><title>Homelab Proxy</title></head><body><h1>Homelab Services</h1><p>Use proper hostname to access services</p></body></html>';
            add_header Content-Type text/html;
        }
        
        # Health check endpoint
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
