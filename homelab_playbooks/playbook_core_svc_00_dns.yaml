---
- name: Bind9
  hosts: dns

  vars:
    go_version: "1.23.4"
    go_tarball_url: "https://go.dev/dl/go{{ go_version }}.linux-arm64.tar.gz"
    go_install_dir: "/usr/local/go"
    go_profile_path: "/etc/profile.d/go.sh"
    bind_exporter_repo: "github.com/prometheus-community/bind_exporter"
    bind_exporter_flags: "--web.listen-address=:9119 --bind.stats-url=http://localhost:8053/json/v1/server_stats"

  tasks:
  - name: bind and other packages
    become: yes
    block:

    - name: Handle dpkg locks and repair
      include_tasks: subtask_fix_dpkg_lock.yaml

    - name: apt-get update
      apt: update_cache=yes

    - name: bind and tools
      apt:
        pkg:
          [ bind9, bind9utils, dnsutils]

    - name: rndc-key-write
      ansible.builtin.shell:
        creates: /etc/bind/rndc.key
        cmd: rndc-confgen -a -b 512

    - name: configs
      copy:
        force: yes
        src: bind9/{{ item  }}
        dest: /etc/bind/{{ item  }}
        owner: bind
        group: bind
        mode: 0644
      with_items:
        - named.conf.local
        - named.conf.options

    - name: make conf dirs
      file:
        path: /var/lib/bind/
        state: directory
        owner: bind
        group: bind
        mode: 0755

    - name: write zone templates
      copy:
        force: yes
        dest: "/var/lib/bind/{{item}}"
        content: '{{ lookup("template", "files/bind9/{{item}}.j2") }}'
        mode: 0644
        owner: bind
        group: bind
      with_items:
        - home.zone
        - cluster.local.zone
        - db.rev.1.168.192.in-addr.arpa

    - name: Config Check
      ansible.builtin.shell: named-checkconf

    - name: Check home zone
      ansible.builtin.shell: named-checkzone  home /var/lib/bind/home.zone

    - name: Check reverse mapping zone
      ansible.builtin.shell: named-checkzone 1.168.192.in-addr.arpa /var/lib/bind/db.rev.1.168.192.in-addr.arpa

    # - name: remove the jnl files before restart
    #   ansible.builtin.shell: find /var/lib/bind -type f -name "*.jnl" -delete

    - name: Create systemd override directory for named.service
      file:
        path: /etc/systemd/system/named.service.d
        state: directory
        mode: '0755'

    - name: Add systemd override for named.service
      copy:
        dest: /etc/systemd/system/named.service.d/override.conf
        content: |
          [Service]
          # Run this command before each attempt to start the service
          ExecStartPre=/usr/bin/find /var/lib/bind -type f -name "*.jnl" -delete

          # Clear the existing ExecStart (required if redefining it)
          ExecStart=
          ExecStart=/usr/sbin/named -f -u bind

          # Always restart the service on failure
          Restart=always

          # No limit on how many times it will restart
          StartLimitIntervalSec=0
          StartLimitBurst=0

          # 10 second delay between restart attempts
          RestartSec=10

    - name: Ensure correct permissions for the override file
      file:
        path: /etc/systemd/system/named.service.d/override.conf
        mode: '0644'

    - name: Enable and Start service
      systemd:
        enabled: yes
        state: restarted
        name: named
        daemon_reload: true


    # go required for bind-exporter
    # install go from tarball
    - name: Remove existing Go installation (if any)
      ansible.builtin.file:
        path: "{{ go_install_dir }}"
        state: absent

    - name: Download Go tarball
      ansible.builtin.get_url:
        url: "{{ go_tarball_url }}"
        dest: "/tmp/go{{ go_version }}.linux-amd64.tar.gz"
        mode: "0644"

    - name: Extract Go tarball
      ansible.builtin.unarchive:
        src: "/tmp/go{{ go_version }}.linux-amd64.tar.gz"
        dest: "/usr/local"
        remote_src: true

    - name: Create symlink for Go binary
      ansible.builtin.file:
        src: "/usr/local/go/bin/go"
        dest: "/usr/local/bin/go"
        state: link

    - name: Verify Go installation
      ansible.builtin.command: go version
      register: go_version_output

    - name: Display Go version
      ansible.builtin.debug:
        msg: "{{ go_version_output.stdout }}"

    # bind9 exporter local installation
    # https://github.com/prometheus-community/bind_exporter
    - name: Clone Bind Exporter repository
      ansible.builtin.shell: |
        export GOPATH=$HOME/go
        export PATH=$PATH:/usr/local/go/bin:$GOPATH/biexport PATH=$PATH:/usr/local/go/bin:$GOPATH/binn
        go install {{ bind_exporter_repo }}@latest
      environment:
        GOPATH: "{{ ansible_env.HOME }}/go"

    - name: Build from src Bind Exporter
      ansible.builtin.shell: |
        cd $GOPATH/src/{{ bind_exporter_repo }}
        make
      environment:
        GOPATH: "{{ ansible_env.HOME }}/go"

    - name: Create systemd service for Bind Exporter
      ansible.builtin.copy:
        dest: /etc/systemd/system/bind_exporter.service
        content: |
          [Unit]
          Description=Prometheus Bind Exporter
          After=network.target

          [Service]
          User={{ ansible_user }}
          Environment="GOPATH={{ ansible_env.HOME }}/go"
          Environment="PATH=/usr/local/go/bin:{{ ansible_env.HOME }}/go/bin:{{ ansible_env.PATH }}"
          WorkingDirectory={{ ansible_env.HOME }}/go/src/{{ bind_exporter_repo }}
          ExecStart={{ ansible_env.HOME }}/go/src/{{ bind_exporter_repo }}/bind_exporter {{ bind_exporter_flags }}
          Restart=always

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd daemon
      ansible.builtin.shell: systemctl daemon-reload

    - name: Enable and start Bind Exporter service
      ansible.builtin.service:
        name: bind_exporter
        enabled: true
        state: started
