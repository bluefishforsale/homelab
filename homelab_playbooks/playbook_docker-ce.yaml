- name: Install Docker on Ubuntu
  hosts: all
  become: yes
  vars:
    docker_keyring_path: /etc/apt/keyrings/docker.asc

  tasks:
  - name: Install prerequisite packages
    apt:
      name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      - software-properties-common
      state: present
      update_cache: yes

  - name: Ensure /etc/docker directory exists
    file:
      path: /etc/docker
      state: directory
      mode: '0755'

  - name: Ensure /etc/apt/keyrings directory exists
    file:
      path: /etc/apt/keyrings
      state: directory
      mode: '0755'

  - name: Add Docker APT key directly (replacing deprecated apt_key)
    ansible.builtin.get_url:
      url: https://download.docker.com/linux/debian/gpg
      dest: "{{ docker_keyring_path }}"
      mode: '0644'

  - name: Add Docker repository
    apt_repository:
      repo: "deb [signed-by={{ docker_keyring_path }}] https://download.docker.com/linux/debian {{ ansible_lsb.codename }} stable"
      state: present
      filename: docker

  - name: Update APT cache
    apt:
      update_cache: yes

  - name: Install Docker packages
    apt:
      name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      state: present

  - name: Ensure docker group exists
    ansible.builtin.group:
      name: docker
      state: present

  - name: Add debian and media users to docker group
    ansible.builtin.user:
      name: "{{ item }}"
      groups: docker
      append: yes
    with_items:
    - debian
    - media

  - name: Ensure Docker daemon.json is configured correctly
    ansible.builtin.template:
      src: files/docker/daemon.json.j2
      dest: /etc/docker/daemon.json
      owner: root
      group: root
      mode: '0644'

  - name: Install jq package
    ansible.builtin.apt:
      name: jq
      state: present
      update_cache: yes

  - name: Format Docker daemon.json using jq and write it back to /etc/docker/daemon.json
    ansible.builtin.command:
      cmd: jq . /etc/docker/daemon.json
    register: formatted_json
    changed_when: false

  - name: Overwrite /etc/docker/daemon.json with formatted version
    ansible.builtin.copy:
      content: "{{ formatted_json.stdout }}"
      dest: /etc/docker/daemon.json
      owner: root
      group: root
      mode: '0644'

  - name: Ensure docker service override directory exists
    ansible.builtin.file:
      path: /etc/systemd/system/docker.service.d
      state: directory
      owner: root
      group: root
      mode: '0755'

  - name: Ensure docker service has extended timeouts (systemd override)
    ansible.builtin.copy:
      dest: /etc/systemd/system/docker.service.d/override.conf
      content: |
        [Service]
        TimeoutStartSec=600
        TimeoutStopSec=600
      owner: root
      group: root
      mode: '0644'
    notify: restart docker

  handlers:
  - name: restart docker
    ansible.builtin.systemd:
      daemon_reload: yes
      name: docker
      state: restarted
