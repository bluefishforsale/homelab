- name: PKI tools and GCP init for KMS
  hosts: local
  collections:
    - google.cloud
  vars_files:
    - vars_kube.yaml
  vars:
    pip_package_requirements:
      - "requests"
      - "google-auth"
      - "google-auth-httplib2"
      - "google-auth-oauthlib"
      - "google-cloud"

  tasks:
    - name: Ensure Python3 is installed
      ansible.builtin.package:
        name:
          - python3
        state: present

    - name: Ensure pip is installed using pyenv (Linux and macOS)
      ansible.builtin.command: "{{ lookup('pipe', 'pyenv which pip') }} install --upgrade pip"
      changed_when: false

    - name: Install required Python packages using pyenv pip
      ansible.builtin.command: "{{ lookup('pipe', 'pyenv which pip') }} install {{ item }}"
      loop: "{{ pip_package_requirements }}"

    - name: Check if GCloud is already authenticated
      ansible.builtin.command: gcloud auth list --filter=status:ACTIVE --format="value(account)"
      register: gcloud_auth_check
      changed_when: false
      failed_when: false

    - name: Print the currently authenticated email
      ansible.builtin.debug:
        msg: "The currently authenticated GCloud account is: {{ gcloud_auth_check.stdout }}"

    - name: Continue with this authenticated account
      ansible.builtin.pause:
        prompt: |
          Do you want to proceed with the current authenticated account "{{ gcloud_auth_check.stdout }}"? (y/N)
      register: user_confirmation

    - name: Include GCloud authentication subtask if user chooses to proceed
      ansible.builtin.include_tasks: subtask_gcloud.yaml
      when: user_confirmation.user_input | lower == "y"

    - name: Check existing KMS keys
      ansible.builtin.command: gcloud kms keys list --location=global --format=json
      register: kms_key_check
      changed_when: false
      failed_when: false

    - name: Manage KMS resources in GCloud (if needed)
      ansible.builtin.include_tasks: subtask_pki_gcloud_kms.yaml
      when: kms_key_check.stdout == "[]"
