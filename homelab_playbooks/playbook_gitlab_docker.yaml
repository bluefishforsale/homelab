---
- name: Gitlab Installation
  hosts: gitlab
  become: true
  gather_facts: true
  vars:
    service: gitlab
    image: "gitlab/gitlab-ce"
    version: "17.5.5-ce.0"
    hostname: "{{ service }}.home"
    path_home: "/data01/services/{{ service }}"
    path_config: "{{ path_home }}/config"
    path_logs: "{{ path_home }}/logs"
    path_data: "{{ path_home }}/data"
    docker_compose_file: "{{ path_home }}/docker-compose.yaml"
    port_80: 80
    port_443: 443
    port_22: 2222
    sendmail_service: sendmail
    sendmail_image: pigeosolutions/docker-sendmail
    sendmail_version: latest
    sendmail_port: 25
    sendmail_port_tls: 587
    sendmail_username: relay
    sendmail_password: email

  tasks:

  # sendmail
  - name: Create sendmail  service
    ansible.builtin.template:
      src: "files/gitlab-docker/{{ sendmail_service }}.service.j2"
      dest: "/etc/systemd/system/{{ sendmail_service }}.service"
      mode: '0644'
    notify:
    - Reload systemd daemon
    - Restart sendmail service

  # gitlab
  - name: Check if the GitLab container is running
    shell: docker ps --filter "name={{ service }}" --format "{{'{{.Names}} {{.Status}}'}}"
    register: gitlab_container
    changed_when: false

  - name: Print container status
    debug:
      msg: "GitLab container status: {{ gitlab_container.stdout }}"

  - name: Skip setup if GitLab container is running
    debug:
      msg: "GitLab container is already running, skipping setup."
    when: gitlab_container.stdout == "{{ service }}"

  - name: Ensure gitlab_home exists
    ansible.builtin.file:
      path: "{{ path_home }}"
      state: directory
      mode: '0755'

  - name: Ensure subdirectories exist
    ansible.builtin.file:
      path: "{{ item }}"
      state: directory
      mode: '0755'
    loop:
    - "{{ path_config }}"
    - "{{ path_logs }}"
    - "{{ path_data }}"

  - name: Create config files
    ansible.builtin.template:
      src: "files/gitlab-docker/{{ item }}"
      dest: "{{ path_config }}/{{ item }}"
      mode: '0644'
    with_items:
    - gitlab.rb
    notify:
    - Restart gitlab service

  - name: Create systemd service
    ansible.builtin.template:
      src: "files/gitlab-docker/{{ service }}.service.j2"
      dest: "/etc/systemd/system/{{ service }}.service"
      mode: '0644'
    notify:
    - Reload systemd daemon
    - Restart gitlab service

  - name: Run docker exec to get GitLab initial root password
    command: >
      docker exec gitlab grep 'Password:' /etc/gitlab/initial_root_password
    register: root_password
    when: gitlab_container.stdout == "{{ service }}"
    notify:
    - Gitlab root password

  handlers:
  - name: Reload systemd daemon
    ansible.builtin.systemd:
      daemon_reload: yes

  - name: Restart sendmail service
    ansible.builtin.systemd:
      name: "{{ sendmail_service }}.service"
      state: restarted

  - name: GitLab reconfigure
    command: docker exec gitlab gitlab-ctl reconfigure

  - name: Restart gitlab service
    ansible.builtin.systemd:
      name: "{{ service }}.service"
      state: restarted

  - name: Gitlab root password
    debug:
      msg: "Gitlab initial root password: {{ root_password.stdout }}"
