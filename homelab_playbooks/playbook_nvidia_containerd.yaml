- name: Nvidia Driver, encoding patch, and Containerd config
  hosts: all
  vars:
    nvidia_driver_version: latest
    nvidia_container_toolkit_version: latest
    reboot_required: false

  tasks:
  - block:
    - name: Ensure 'contrib' and 'non-free' repositories are enabled
      ansible.builtin.apt_repository:
        repo: "deb http://deb.debian.org/debian {{ ansible_lsb.codename }} main contrib non-free non-free-firmware"
        state: present
        filename: "debian_contrib_non_free"
      register: contrib_non_free_repo

    - name: Debug - Confirm Nvidia GPU variable
      ansible.builtin.debug:
        msg: "Nvidia GPU detected: {{ nvidia_gpu }}"

    - name: Update apt cache if repository changes occurred
      ansible.builtin.apt:
        update_cache: yes
      when: contrib_non_free_repo.changed

    - name: Install prerequisite packages
      ansible.builtin.apt:
        name:
        - build-essential
        - dkms
        - linux-headers-{{ ansible_kernel }}
        - pciutils
        - curl
        state: present
        update_cache: yes

    - name: Check for existing NVIDIA GPUs
      ansible.builtin.shell: |
        lspci | grep -i 'nvidia'
      register: nvidia_gpu_check
      changed_when: false

    - name: Fail if no NVIDIA GPU is detected
      ansible.builtin.fail:
        msg: "No NVIDIA GPU detected on this host."
      when: nvidia_gpu_check.stdout == ""

    - name: Blacklist Nouveau driver
      ansible.builtin.copy:
        dest: /etc/modprobe.d/blacklist-nouveau.conf
        content: |
          blacklist nouveau
          options nouveau modeset=0
      notify: update-initramfs
      register: blacklist_nouveau

    - name: Remove Nouveau drivers if loaded
      ansible.builtin.shell: |
        lsmod | grep -i nouveau && rmmod nouveau || true
      register: remove_nouveau
      changed_when: remove_nouveau.stdout != ""

    - name: Download NVIDIA Docker GPG key
      ansible.builtin.shell: |
        curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey > /etc/apt/keyrings/nvidia-docker.key
      args:
        creates: /etc/apt/keyrings/nvidia-docker.key

    - name: Download NVIDIA Docker repository list for Debian 11
      ansible.builtin.shell: |
        curl -s -L https://nvidia.github.io/nvidia-docker/debian11/nvidia-docker.list > /etc/apt/sources.list.d/nvidia-docker.list
      args:
        creates: /etc/apt/sources.list.d/nvidia-docker.list
      register: nvidia_repo_file_download

    - name: Set fact to trigger apt cache update if repo changed
      ansible.builtin.set_fact:
        nvidia_container_repo_changed: true
      when: nvidia_repo_file_download.changed or nvidia_repo_modified.changed

    - name: Update apt cache if NVIDIA Container Toolkit repository changed
      ansible.builtin.apt:
        update_cache: yes
      when: nvidia_container_repo_changed | default(false) | bool

    - name: Install NVIDIA driver
      ansible.builtin.apt:
        name: "nvidia-driver"
        state: "{{ nvidia_driver_version }}"
      register: nvidia_driver_install
      notify: set_reboot_required

    - name: Install NVIDIA Container Toolkit
      ansible.builtin.apt:
        name: "nvidia-container-toolkit"
        state: "{{ nvidia_container_toolkit_version }}"
      register: nvidia_container_toolkit_install
      notify: restart_containerd

    - name: Install Docker and NVIDIA Container Runtime
      ansible.builtin.shell: |
        apt-get install -y \
          docker.io \
          nvidia-container-runtime
      changed_when: true

    - name: Configure NVIDIA Container Runtime
      ansible.builtin.shell: |
        sudo nvidia-ctk runtime configure --runtime=docker
      register: nvidia_container_runtime_configure
      changed_when: nvidia_container_runtime_configure.rc == 0
      notify: restart_containerd

    - name: Restart containerd
      ansible.builtin.systemd:
        name: containerd
        state: restarted
      when: nvidia_container_runtime_configure.changed

    - name: Reboot system if required
      ansible.builtin.reboot:
        msg: "Reboot initiated by Ansible for NVIDIA driver installation."
        connect_timeout: 300
        reboot_timeout: 600
        pre_reboot_delay: 5
        post_reboot_delay: 30
      when: reboot_required
      become: true

    - name: Verify NVIDIA driver installation with nvidia-smi
      ansible.builtin.command: nvidia-smi
      register: nvidia_smi_output
      retries: 5
      delay: 10
      until: nvidia_smi_output.rc == 0
      changed_when: false

    when: nvidia_gpu | default(false) | bool
    become: true

  handlers:
  - name: update-initramfs
    ansible.builtin.command: update-initramfs -u
    listen: update-initramfs
    notify: set_reboot_required

  - name: set_reboot_required
    ansible.builtin.set_fact:
      reboot_required: true
    listen: set_reboot_required

  - name: restart_containerd
    ansible.builtin.systemd:
      name: containerd
      state: restarted
    listen: restart_containerd
