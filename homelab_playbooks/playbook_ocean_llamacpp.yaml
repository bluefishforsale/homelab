---
- name: Configure llama.cpp API server with GPU support using Docker Compose
  hosts: ocean
  become: true
  gather_facts: true

  vars:
    service: llamacpp
    image: ghcr.io/ggerganov/llama.cpp
    version: server-cuda
    port: 8080
    data: /data01
    files: files/llamacpp
    home: "{{ data }}/services/{{ service }}"
    user: media
    uid: 1001
    gid: 1001
    api_key: llamacpp-homelab-key

  tasks:

  - name: Ensure base directory exists
    ansible.builtin.file:
      path: "{{ home }}"
      state: directory
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: '0755'

  - name: Ensure subdirectories exist
    ansible.builtin.file:
      path: "{{ home }}/{{ item }}"
      state: directory
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: '0755'
    with_items:
    - models
    - config
    - logs

  - name: Create docker-compose.yml
    ansible.builtin.template:
      src: "{{ files }}/docker-compose.yml.j2"
      dest: "{{ home }}/docker-compose.yml"
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: '0644'
    notify:
    - Reload systemd daemon
    - Restart llamacpp service

  - name: Create llamacpp environment file
    ansible.builtin.template:
      src: "{{ files }}/llamacpp.env.j2"
      dest: "{{ home }}/.env"
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: '0600'
    notify:
    - Reload systemd daemon
    - Restart llamacpp service

  - name: Create llamacpp systemd service
    ansible.builtin.template:
      src: "{{ files }}/{{ item }}.j2"
      dest: "/etc/systemd/system/{{ item }}"
      mode: '0644'
    with_items:
    - llamacpp.service
    notify:
    - Reload systemd daemon
    - Restart llamacpp service

  - name: Enable llamacpp service
    ansible.builtin.systemd:
      name: llamacpp.service
      enabled: yes
      daemon_reload: yes

  handlers:
  - name: Reload systemd daemon
    ansible.builtin.systemd:
      daemon_reload: yes

  - name: Restart llamacpp service
    ansible.builtin.systemd:
      name: llamacpp.service
      state: restarted
