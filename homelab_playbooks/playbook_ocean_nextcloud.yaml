---
- name: Configure NextCloud file sharing with Docker Compose
  hosts: ocean
  become: true
  gather_facts: true

  vars_files:
    - vault_secrets.yaml

  vars:
    service: nextcloud
    image: linuxserver/nextcloud
    version: latest
    port: 8081
    data: /data01
    files: files/nextcloud
    home: "{{ data }}/services/{{ service }}"
    user: media
    uid: 1001
    gid: 1001
    config_salt: "{{ (ansible_date_time.epoch ~ ansible_hostname ~ 'salt') | hash('sha256') | truncate(32, True, '') }}"
    config_secret: "{{ (ansible_date_time.epoch ~ ansible_hostname ~ 'secret') | hash('sha256') | truncate(32, True, '') }}"

  tasks:

  - name: Ensure base directory exists
    ansible.builtin.file:
      path: "{{ home }}"
      state: directory
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: '0755'

  - name: Ensure subdirectories exist
    ansible.builtin.file:
      path: "{{ home }}/{{ item }}"
      state: directory
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: '0755'
    with_items:
    - data
    - config
    - apps
    - database
    - redis

  - name: Ensure nextcloud-files directory exists
    ansible.builtin.file:
      path: "{{ data }}/nextcloud-files"
      state: directory
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: '0755'

  - name: Ensure NextCloud config directory exists
    ansible.builtin.file:
      path: "{{ home }}/config/www/nextcloud/config"
      state: directory
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: '0755'
      recurse: yes

  - name: Create pre-configured NextCloud config.php
    ansible.builtin.template:
      src: "{{ files }}/config.php.j2"
      dest: "{{ home }}/config/www/nextcloud/config/config.php"
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: '0644'
    notify:
    - Restart nextcloud service

  - name: Create docker-compose.yml
    ansible.builtin.template:
      src: "{{ files }}/docker-compose.yml.j2"
      dest: "{{ home }}/docker-compose.yml"
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: '0644'
    notify:
    - Reload systemd daemon
    - Restart nextcloud service

  - name: Create nextcloud environment file
    ansible.builtin.template:
      src: "{{ files }}/nextcloud.env.j2"
      dest: "{{ home }}/nextcloud.env"
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: '0600'
    notify:
    - Reload systemd daemon
    - Restart nextcloud service

  - name: Create nextcloud systemd service
    ansible.builtin.template:
      src: "{{ files }}/{{ item }}.j2"
      dest: "/etc/systemd/system/{{ item }}"
      mode: '0644'
    with_items:
    - nextcloud.service
    notify:
    - Reload systemd daemon
    - Restart nextcloud service

  - name: Enable nextcloud service
    ansible.builtin.systemd:
      name: nextcloud.service
      enabled: yes
      daemon_reload: yes

  - name: Start nextcloud service
    ansible.builtin.systemd:
      name: nextcloud.service
      state: started
      
  - name: Wait for NextCloud to be ready
    ansible.builtin.uri:
      url: "http://{{ ansible_default_ipv4.address }}:{{ port }}/status.php"
      method: GET
      status_code: 200
    register: nextcloud_status
    until: nextcloud_status.status == 200
    retries: 30
    delay: 10

  handlers:
  - name: Reload systemd daemon
    ansible.builtin.systemd:
      daemon_reload: yes

  - name: Restart nextcloud service
    ansible.builtin.systemd:
      name: nextcloud.service
      state: restarted
