---
- name: Configure Nginx Reverse Proxy using Docker Compose
  hosts: ocean
  become: true
  gather_facts: true

  vars:
    service: nginx
    image: nginx
    version: 1.27.3-alpine
    port_http: 80
    port_https: 443
    data: /data01
    files: files/nginx-compose
    home: "{{ data }}/services/{{ service }}"
    user: root
    uid: 0
    gid: 0

  tasks:

  - name: Ensure base directory exists
    ansible.builtin.file:
      path: "{{ home }}"
      state: directory
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: '0755'

  - name: Ensure nginx subdirectories exist
    ansible.builtin.file:
      path: "{{ home }}/{{ item }}"
      state: directory
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: '0755'
    with_items:
    - logs
    - conf.d

  - name: Create nginx main configuration
    ansible.builtin.template:
      src: "{{ files }}/nginx.conf.j2"
      dest: "{{ home }}/nginx.conf"
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: '0644'
    notify:
    - Reload systemd daemon
    - Restart nginx service

  - name: Create nginx proxy configurations
    ansible.builtin.template:
      src: "{{ files }}/proxy_hostname_web_proxy.conf"
      dest: "{{ home }}/conf.d/proxy_hostname.conf"
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: '0644'
    notify:
    - Reload systemd daemon
    - Restart nginx service

  - name: Create docker-compose.yml
    ansible.builtin.template:
      src: "{{ files }}/docker-compose.yml.j2"
      dest: "{{ home }}/docker-compose.yml"
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: '0644'
    notify:
    - Reload systemd daemon
    - Restart nginx service

  - name: Create nginx environment file
    ansible.builtin.template:
      src: "{{ files }}/nginx.env.j2"
      dest: "{{ home }}/.env"
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: '0600'
    notify:
    - Reload systemd daemon
    - Restart nginx service

  - name: Create nginx systemd service
    ansible.builtin.template:
      src: "{{ files }}/nginx.service.j2"
      dest: "/etc/systemd/system/nginx.service"
      mode: '0644'
    notify:
    - Reload systemd daemon
    - Restart nginx service

  - name: Enable nginx service
    ansible.builtin.systemd:
      name: nginx.service
      enabled: yes
      daemon_reload: yes

  handlers:
  - name: Reload systemd daemon
    ansible.builtin.systemd:
      daemon_reload: yes

  - name: Restart nginx service
    ansible.builtin.systemd:
      name: nginx.service
      state: restarted
