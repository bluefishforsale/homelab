- name: Set up containerd, syctls, and kernel modules required for Kubernetes
  hosts: k8s
  become: yes
  any_errors_fatal: true
  tasks:
    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - curl
          - gnupg
        state: present
        update_cache: yes
      when: not ansible_check_mode
    
    - name: Ensure /etc/cni/net.d/ directory exists
      file:
        path: /etc/cni/net.d/
        state: directory
        owner: root
        group: root
        mode: '0755'
    
    - name: Deploy CNI configuration file
      template:
        src: files/10-containerd-net.conflist.j2
        dest: /etc/cni/net.d/10-containerd-net.conflist
        owner: root
        group: root
        mode: '0644'

    - name: Install containerd
      apt:
        name: containerd
        state: present
      when: not ansible_check_mode

    - name: Install CNI plugins
      apt:
        name: kubernetes-cni
        state: present
      when: not ansible_check_mode

    - name: Create containerd configuration directory
      file:
        path: /etc/containerd
        state: directory
        mode: '0755'
      when: not ansible_check_mode

    - name: Generate default containerd configuration file
      command: "containerd config default > /etc/containerd/config.toml"
      args:
        creates: /etc/containerd/config.toml
      when: not ansible_check_mode

    ### start config updates
    - name: Update CNI plugin directory to /opt/cni/bin
      replace:
        path: /etc/containerd/config.toml
        regexp: '^(\s*bin_dir\s*=\s*).*'
        replace: '\1"/opt/cni/bin"'
      when: not ansible_check_mode

    - name: Ensure crictl config directory exists
      file:
        path: /etc/crictl
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Set crictl runtime endpoint to containerd
      copy:
        dest: /etc/crictl.yaml
        content: |
          runtime-endpoint: unix:///run/containerd/containerd.sock

    ### end config updates
    - name: Enable and start containerd
      systemd:
        name: containerd
        enabled: yes
        state: restarted
      when: not ansible_check_mode

    - name: Load br_netfilter module
      modprobe:
        name: br_netfilter
        state: present
      when: not ansible_check_mode

    - name: Ensure br_netfilter module is loaded on boot
      lineinfile:
        path: /etc/modules-load.d/k8s.conf
        create: yes
        line: "br_netfilter"
        state: present
      when: not ansible_check_mode

    - name: Apply kernel parameters for Kubernetes networking
      sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        state: present
        sysctl_set: yes
      loop:
        - { name: 'net.bridge.bridge-nf-call-iptables', value: '1' }
        - { name: 'net.bridge.bridge-nf-call-ip6tables', value: '1' }
        - { name: 'net.ipv4.ip_forward', value: '1' }
      when: not ansible_check_mode

    - name: Persist kernel parameters for Kubernetes networking
      lineinfile:
        path: /etc/sysctl.d/k8s.conf
        create: yes
        line: "{{ item }}"
      loop:
        - "net.bridge.bridge-nf-call-iptables = 1"
        - "net.bridge.bridge-nf-call-ip6tables = 1"
        - "net.ipv4.ip_forward = 1"
      when: not ansible_check_mode

    - name: Apply all persisted sysctl parameters
      command: sysctl --system
      when: not ansible_check_mode

