- name: All controller dir and kubeadm loop
  hosts: k8s_controller
  become: yes
  any_errors_fatal: true
  tasks:
    - name: Create /etc/kubernetes
      file:
        state: directory
        path: /etc/kubernetes
        owner: root
        group: root
        mode: '0755'
      when: not ansible_check_mode      

    - name: Copy kubeadm configuration template to /etc/kubernetes/kubeadm-config.yaml
      template:
        src: files/kubeadm-config.yaml.j2
        dest: /etc/kubernetes/kubeadm-config.yaml
        owner: root
        group: root
        mode: '0644'
      when: not ansible_check_mode

- name: Initialize Kubernetes master node
  hosts: master
  become: yes
  any_errors_fatal: true
  tasks:
    - name: Check if kubeadm has already been run
      stat:
        path: /etc/kubernetes/admin.conf
      register: kubeadm_init_check
      when: not ansible_check_mode

    - name: Kubeadm init master (skip-addon)
      shell: |
        kubeadm init \
          --config /etc/kubernetes/kubeadm-config.yaml \
          --upload-certs \
          --ignore-preflight-errors=Port-6443 \
          --skip-phases=addon/coredns,addon/kube-proxy \
          --v=2
      register: kubeadm_output
      when: not ansible_check_mode and not kubeadm_init_check.stat.exists

    - name: Wait before looking for health
      pause:
        seconds: 45

    - name: Print waiting message
      debug:
        msg: "waiting up to 300 sec for apiserver to return 200 OK"
    
    - name: Deploy Flannel CNI network plugin
      shell: |
        kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      when: not ansible_check_mode 
      retries: 5
      delay: 2

    - name: Wait for Kubernetes API server to become healthy
      command: >
        curl -sI --cert /etc/kubernetes/pki/apiserver-kubelet-client.crt
             --key /etc/kubernetes/pki/apiserver-kubelet-client.key
             --cacert /etc/kubernetes/pki/ca.crt
             https://192.168.1.61:6443/healthz
      register: health_check
      retries: 100
      delay: 1
      until: health_check.stdout is search("HTTP/2 200")
      no_log: true
      changed_when: false

    - name: Kubeadm init master (just addon)
      shell: |
        kubeadm init phase addon all 
      register: kubeadm_output
      when: not ansible_check_mode

    - name: Kubeadm output
      debug:
        msg: "{{ kubeadm_output.stdout }}"
      when: not ansible_check_mode

    - name: Copy admin.conf from the master node to the local machine
      fetch:
        src: /etc/kubernetes/admin.conf
        dest: "{{ lookup('env', 'HOME') }}/.kube/config"
        flat: yes
