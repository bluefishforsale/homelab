- name: Generate Kubernetes join token on the first master node
  hosts: k8s
  become: yes
  any_errors_fatal: true
  tasks:
    - name: Distribute admin.conf to all controllers
      copy:
        src: "{{ lookup('env', 'HOME') }}/.kube/config"
        dest: /etc/kubernetes/admin.conf
        owner: root
        group: root
        mode: '0600'
      delegate_to: "{{ item }}"
      with_items: "{{ groups['k8s_controller'] }}"
      when: inventory_hostname != groups['k8s_controller'][0]

    - name: Generate a new Kubernetes join token and print the join command
      shell: kubeadm token create --print-join-command
      run_once: true
      register: kubeadm_token_output
      delegate_to: "{{ groups['k8s_controller'][0] }}"
      when: not ansible_check_mode

    - name: Display generated join command
      debug:
        msg: "{{ kubeadm_token_output.stdout }}"
      when: not ansible_check_mode

    - name: Join additional master nodes
      shell: "{{ kubeadm_token_output.stdout }} --control-plane"
      when:  inventory_hostname in groups['k8s_controller'] and inventory_hostname != groups['k8s_controller'][0] and not ansible_check_mode

    - name: Join worker nodes
      shell: "{{ kubeadm_token_output.stdout }}"
      when:  inventory_hostname in groups['k8s_worker'] and not ansible_check_mode

    - name: Display join output
      debug:
        var: kubeadm_join_output.stdout
      run_once: true
      when: kubeadm_join_output.stdout is defined and not ansible_check_mode

    # allow kubectl for debian user
    - name: Create .kube directory for debian user
      file:
        path: /home/{{ ansible_user }}/.kube
        state: directory
        mode: '0755'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      when: not ansible_check_mode
