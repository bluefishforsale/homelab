---
# this does not work, WiP, kubeadm generates node specific CA's for the kubelet
# soutions are either to Combine all kubelet-ca.crt files into a single CA bundle
# or to copy the master crts into all other control-plane nodes
# until then, the metrics-server chart is using insecure tls
- name: Generate Metrics-Server Certificates
  hosts: master
  become: yes
  gather_facts: true
  vars:
    cert_dir: /etc/metrics-server/tls
    csr_config: /tmp/metrics-server-csr.conf
    kubernetes_ca_cert: /etc/kubernetes/pki/ca.crt
    kubernetes_ca_key: /etc/kubernetes/pki/ca.key
    cert_days_valid: 3650
    metrics_server_secret: metrics-server-tls
    namespace: kube-system

  tasks:
    - name: Kubectl command
      set_fact:
        kubectl: "kubectl --kubeconfig /etc/kubernetes/admin.conf"

    - name: Ensure certificate directory exists
      file:
        path: "{{ cert_dir }}"
        state: directory
        owner: root
        group: root
        mode: 0755

    # - name: Debug hostvars for k8s group
    #   debug:
    #     msg: "{{ hostvars[host] }}"
    #   with_items: "{{ groups['k8s'] }}"
    #   loop_control:
    #     loop_var: host

    - name: Create CSR configuration file
      template:
        src: files/metrics-server.csr.j2
        dest: "{{ csr_config }}"

    - name: Generate private key for metrics-server
      command: >
        openssl genrsa -out {{ cert_dir }}/serving.key 2048

    - name: Generate CSR for metrics-server
      command: >
        openssl req -new -key {{ cert_dir }}/serving.key
        -out {{ cert_dir }}/serving.csr
        -config {{ csr_config }}

    - name: Sign metrics-server CSR with Kubernetes CA
      command: >
        openssl x509 -req -in {{ cert_dir }}/serving.csr
        -CA {{ kubernetes_ca_cert }} -CAkey {{ kubernetes_ca_key }}
        -CAcreateserial -out {{ cert_dir }}/serving.crt
        -days {{ cert_days_valid }} -extensions ext
        -extfile {{ csr_config }}

    - name: Delete Secret
      command: >
        {{ kubectl }} delete secret {{ metrics_server_secret }} -n {{ namespace }}
      args:
        creates: "/etc/kubernetes/secrets/{{ metrics_server_secret }}"
      ignore_errors: yes

    - name: Create Secret
      command: >
        {{ kubectl }} create secret generic {{ metrics_server_secret }}
        -n {{ namespace }}
        --from-file=serving.crt={{ cert_dir }}/serving.crt
        --from-file=serving.key={{ cert_dir }}/serving.key

    - name: Clean up temporary CSR config file
      file:
        path: "{{ csr_config }}"
        state: absent
